generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Obra {
  codigo     String @id
  nome       String
  imagem_url String
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  hashedPassword String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  papel          String?
  accounts       Account[]
  sessions       Session[]
}

model Maquina {
  id               Int                 @id @default(autoincrement())
  cod_obra         String?
  nome             String?
  modelo           String?
  imagem           String?             @default("https://source.unsplash.com/featured/300x300?backhoe")
  acaoNecessaria   Boolean             @default(false)
  quebrada         Boolean             @default(false)
  motivo_quebrada  String?
  origem           String?
  contador         Float?
  categoria        String?
  unidade          String?
  alimentacao      String?
  contadorInicial  Float?
  tipo             String?
  aluguelInfo      Alugada?
  atividades       Atividade[]
  planoManutencao  PlanoManutencao[]
  maquina_pesada   MaquinaPesada?
  manutencoes      Manutencao[]
  item_associacao  ItemAssociacaoEap[]
  documento        String?
  data_documento   DateTime?
  status_documento String?             @default("Pendente")
  docVitalicio     Boolean?

  @@map("maquinas")
}

model Manutencao {
  id             Int       @id @default(autoincrement())
  descricao      String?
  tipo           String?
  dataRealizacao DateTime?
  momento        Float?
  custo          Float?
  Maquina        Maquina?  @relation(fields: [maquinaId], references: [id])
  maquinaId      Int?
  nfManutencao   String?

  @@map("manutencoes")
}

model Alugada {
  id               Int       @id @default(autoincrement())
  data_locacao     DateTime? @default(now())
  previsao_entrega DateTime?
  maquinaId        Int       @unique
  maquina          Maquina   @relation(fields: [maquinaId], references: [id])
  limite           Float?
  fornecedor       String?

  @@map("alugadas")
}

model PlanoManutencao {
  id        Int     @id @default(autoincrement())
  maquinaId Int
  maquina   Maquina @relation(fields: [maquinaId], references: [id])
  intervalo Float?
  descricao String?
  tipo      String?

  @@map("planos_manutencao")
}

model Atividade {
  id                    Int             @id @default(autoincrement())
  maquinaId             Int
  maquina               Maquina         @relation(fields: [maquinaId], references: [id])
  descricao_serv        String?
  data_inicial_trabalho DateTime?
  data_final_trabalho   DateTime?
  operador              String?
  horimetro_inicial     Float?
  horimetro_final       Float?
  interferencias        Interferencia[]
  apontador             Apontador       @relation(fields: [apontadorId], references: [id])
  eap                   ItemEap         @relation(fields: [eapId], references: [item])
  eapId                 String
  apontadorId           Int

  @@map("atividades")
}

model Interferencia {
  id                Int       @id @default(autoincrement())
  hora_inicial      DateTime?
  hora_final        DateTime?
  motivo            String?
  total_combustivel Float?
  contador          Float?
  atividade         Atividade @relation(fields: [atividadeId], references: [id])
  atividadeId       Int

  @@map("interferencias")
}

model Apontador {
  id        Int         @id @default(autoincrement())
  nome      String?
  idade     Int?
  atividade Atividade[]

  @@map("apontadores")
}

model ItemEap {
  id             Int         @id @default(autoincrement())
  item           String      @unique
  codigo         String
  descricao      String
  unidade        String
  indice         Float
  preco_unitario Float
  cod_obra       String
  atividades     Atividade[]

  @@map("eap")
}

model ItemAssociacaoEap {
  id                Int           @id @default(autoincrement())
  itemEap           String?
  apelido           String?
  tipo              TipoAtividade @relation(fields: [tipo_atividade_id], references: [id])
  tipo_atividade_id Int
  maquinaId         Int
  maquina           Maquina       @relation(fields: [maquinaId], references: [id])
}

model TipoAtividade {
  id               Int                 @id @default(autoincrement())
  nome             String?
  unidade          String?
  items_associacao ItemAssociacaoEap[] 
}

//tabelas de tipos de maquinas
model MaquinaPesada {
  id                        Int       @id @default(autoincrement())
  alimentacao               String?
  dimensao_trabalho         Float?
  identificador             String?
  foto_documento            String?
  data_vencimento_documento DateTime?
  maquina                   Maquina   @relation(fields: [maquinaId], references: [id])
  maquinaId                 Int       @unique
  operadorCpf               String
  operador                  Operador  @relation(fields: [operadorCpf], references: [cpf])
  artUrl                    String?
  planoManUrl               String?

  @@map("categoria_maquinas_pesadas")
}

model TemplatePlanoManutencoes {
  id           Int    @id @default(autoincrement())
  tipo_veiculo String
  manutencao   String
  intervalo    Float
  unidade      String
}

model Operador {
  cpf           String                  @id @unique
  imagem_url    String
  nome          String
  sobrenome     String
  idade         Int
  maquina       MaquinaPesada[]
  certificacoes CertificacoesOperador[]

  @@map("operadores")
}

model CertificacoesOperador {
  id                 Int      @id @default(autoincrement())
  numero_certificado String
  tipo_maquina       String
  url_certificado    String
  data_vencimento    DateTime
  updatedAt          DateTime @updatedAt
  operadorId         String
  status             String   @default("Pendente")
  aprovado           Boolean  @default(false)
  aprovado_por       String?
  operador           Operador @relation(fields: [operadorId], references: [cpf])

  @@map("certificacoes_operador")
}
